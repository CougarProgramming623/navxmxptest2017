// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<SpeedController> RobotMap::driveSystemLeftBackMotor;
std::shared_ptr<SpeedController> RobotMap::driveSystemLeftFrontMotor;
std::shared_ptr<SpeedController> RobotMap::driveSystemRightBackMotor;
std::shared_ptr<SpeedController> RobotMap::driveSystemRightFrontMotor;
std::shared_ptr<RobotDrive> RobotMap::driveSystemrobotDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    driveSystemLeftBackMotor.reset(new Talon(0));
    lw->AddActuator("DriveSystem", "Left Back Motor", std::static_pointer_cast<Talon>(driveSystemLeftBackMotor));
    
    driveSystemLeftFrontMotor.reset(new Talon(1));
    lw->AddActuator("DriveSystem", "Left Front Motor", std::static_pointer_cast<Talon>(driveSystemLeftFrontMotor));
    
    driveSystemRightBackMotor.reset(new Talon(2));
    lw->AddActuator("DriveSystem", "Right Back Motor", std::static_pointer_cast<Talon>(driveSystemRightBackMotor));
    
    driveSystemRightFrontMotor.reset(new Talon(3));
    lw->AddActuator("DriveSystem", "Right FrontMotor", std::static_pointer_cast<Talon>(driveSystemRightFrontMotor));
    

    driveSystemrobotDrive.reset(new RobotDrive(driveSystemLeftFrontMotor, driveSystemLeftBackMotor,
              driveSystemRightFrontMotor, driveSystemRightBackMotor));
    

    driveSystemrobotDrive->SetSafetyEnabled(true);
        driveSystemrobotDrive->SetExpiration(0.1);
        driveSystemrobotDrive->SetSensitivity(0.5);
        driveSystemrobotDrive->SetMaxOutput(1.0);
        driveSystemrobotDrive->SetInvertedMotor(RobotDrive::kFrontLeftMotor, true);
        driveSystemrobotDrive->SetInvertedMotor(RobotDrive::kFrontRightMotor,true);
        driveSystemrobotDrive->SetInvertedMotor(RobotDrive::kRearLeftMotor, true);
        driveSystemrobotDrive->SetInvertedMotor(RobotDrive::kRearRightMotor, true);


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
